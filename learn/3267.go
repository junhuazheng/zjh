//空接口的值比较
//空接口在保存不同的值得接口进行比较时，Go语言会优先比较值得类型。因此类型不同，比较的结果也是不同的
var a interface{} = 100

var b interface{} = "hi"

fmt.Prinltn(a == b)

//不能比较空接口中的动态值

//当借口中保存有动态类型的智时，运行时将触发错误：
var c interface{} = []int{10}

var d interface{} = []int[20]

fmt.Println(c = d)
//这里会发生崩溃

//类型及比较的集中情况

//map 宕机错误，不可比较
//切片 宕机错误，不开通比较
//通道（channel） 可比较，必须由同一个make生成，也就是同一个通道才会是true，否则为false
//数组 可比较，编译期知道两个数组是否一致
//结构体 可比较，可以逐个比较结构体的值
//函数 可比较
 