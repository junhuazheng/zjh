//模拟构造函数重载

//如果使用结构体描述猫的特性，那么根据毛的颜色和名字可以有不同种类的猫。
//那么不同的颜色和名字就是结构体的字段，同事可以使用颜色和名字构造不同种类的猫的实例
//这个过程可以参考下面的代码

type Cat struct { //定义Cat的结构，包含颜色和名字字段
	Color string
	Name  string
}

func NewCatByName(name string) *Cat { //定义用名字构造猫结构的函数，返回Cat指针
	return &Cat{ //取地址实例化猫的结构体
		Name: name, //初始化猫的名字字段，忽略颜色字段
	}
}

func NewCatByColor(color string) *Cat { //定义用颜色构造猫结构的函数，返回Cat指针
	return &Cat{
		Color: color,
	}
}

//在这个例子中，颜色和名字两种属性的类型都是字符串
//由于Go语言中没有函数重载，为了避免函数名字冲突，使用连个不同的函数名表示不同的Cat构造过程
//函数重载：同一范围中声明几个功能类似的同名函数，但是这些同名函数的形式参数（指参数个数、类型或者顺序）
//必然不同，也就是说用同一个运算符完成不同的运算功能